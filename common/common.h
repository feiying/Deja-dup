/* common.h generated by valac 0.16.1, the Vala compiler, do not modify */


#ifndef __COMMON_H__
#define __COMMON_H__

#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <libpeas/peas.h>

G_BEGIN_DECLS


#define DEJA_DUP_TYPE_BACKEND (deja_dup_backend_get_type ())
#define DEJA_DUP_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_BACKEND, DejaDupBackend))
#define DEJA_DUP_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_BACKEND, DejaDupBackendClass))
#define DEJA_DUP_IS_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_BACKEND))
#define DEJA_DUP_IS_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_BACKEND))
#define DEJA_DUP_BACKEND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_BACKEND, DejaDupBackendClass))

typedef struct _DejaDupBackend DejaDupBackend;
typedef struct _DejaDupBackendClass DejaDupBackendClass;
typedef struct _DejaDupBackendPrivate DejaDupBackendPrivate;

#define DEJA_DUP_TOOL_JOB_TYPE_MODE (deja_dup_tool_job_mode_get_type ())

#define DEJA_DUP_TYPE_BACKEND_AUTO (deja_dup_backend_auto_get_type ())
#define DEJA_DUP_BACKEND_AUTO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_BACKEND_AUTO, DejaDupBackendAuto))
#define DEJA_DUP_BACKEND_AUTO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_BACKEND_AUTO, DejaDupBackendAutoClass))
#define DEJA_DUP_IS_BACKEND_AUTO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_BACKEND_AUTO))
#define DEJA_DUP_IS_BACKEND_AUTO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_BACKEND_AUTO))
#define DEJA_DUP_BACKEND_AUTO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_BACKEND_AUTO, DejaDupBackendAutoClass))

typedef struct _DejaDupBackendAuto DejaDupBackendAuto;
typedef struct _DejaDupBackendAutoClass DejaDupBackendAutoClass;
typedef struct _DejaDupBackendAutoPrivate DejaDupBackendAutoPrivate;

#define DEJA_DUP_TYPE_BACKEND_FILE (deja_dup_backend_file_get_type ())
#define DEJA_DUP_BACKEND_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_BACKEND_FILE, DejaDupBackendFile))
#define DEJA_DUP_BACKEND_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_BACKEND_FILE, DejaDupBackendFileClass))
#define DEJA_DUP_IS_BACKEND_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_BACKEND_FILE))
#define DEJA_DUP_IS_BACKEND_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_BACKEND_FILE))
#define DEJA_DUP_BACKEND_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_BACKEND_FILE, DejaDupBackendFileClass))

typedef struct _DejaDupBackendFile DejaDupBackendFile;
typedef struct _DejaDupBackendFileClass DejaDupBackendFileClass;
typedef struct _DejaDupBackendFilePrivate DejaDupBackendFilePrivate;

#define DEJA_DUP_TYPE_BACKEND_RACKSPACE (deja_dup_backend_rackspace_get_type ())
#define DEJA_DUP_BACKEND_RACKSPACE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_BACKEND_RACKSPACE, DejaDupBackendRackspace))
#define DEJA_DUP_BACKEND_RACKSPACE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_BACKEND_RACKSPACE, DejaDupBackendRackspaceClass))
#define DEJA_DUP_IS_BACKEND_RACKSPACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_BACKEND_RACKSPACE))
#define DEJA_DUP_IS_BACKEND_RACKSPACE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_BACKEND_RACKSPACE))
#define DEJA_DUP_BACKEND_RACKSPACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_BACKEND_RACKSPACE, DejaDupBackendRackspaceClass))

typedef struct _DejaDupBackendRackspace DejaDupBackendRackspace;
typedef struct _DejaDupBackendRackspaceClass DejaDupBackendRackspaceClass;
typedef struct _DejaDupBackendRackspacePrivate DejaDupBackendRackspacePrivate;

#define DEJA_DUP_TYPE_CHECKER (deja_dup_checker_get_type ())
#define DEJA_DUP_CHECKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_CHECKER, DejaDupChecker))
#define DEJA_DUP_CHECKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_CHECKER, DejaDupCheckerClass))
#define DEJA_DUP_IS_CHECKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_CHECKER))
#define DEJA_DUP_IS_CHECKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_CHECKER))
#define DEJA_DUP_CHECKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_CHECKER, DejaDupCheckerClass))

typedef struct _DejaDupChecker DejaDupChecker;
typedef struct _DejaDupCheckerClass DejaDupCheckerClass;

#define DEJA_DUP_TYPE_BACKEND_S3 (deja_dup_backend_s3_get_type ())
#define DEJA_DUP_BACKEND_S3(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_BACKEND_S3, DejaDupBackendS3))
#define DEJA_DUP_BACKEND_S3_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_BACKEND_S3, DejaDupBackendS3Class))
#define DEJA_DUP_IS_BACKEND_S3(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_BACKEND_S3))
#define DEJA_DUP_IS_BACKEND_S3_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_BACKEND_S3))
#define DEJA_DUP_BACKEND_S3_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_BACKEND_S3, DejaDupBackendS3Class))

typedef struct _DejaDupBackendS3 DejaDupBackendS3;
typedef struct _DejaDupBackendS3Class DejaDupBackendS3Class;
typedef struct _DejaDupBackendS3Private DejaDupBackendS3Private;

#define DEJA_DUP_TYPE_BACKEND_U1 (deja_dup_backend_u1_get_type ())
#define DEJA_DUP_BACKEND_U1(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_BACKEND_U1, DejaDupBackendU1))
#define DEJA_DUP_BACKEND_U1_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_BACKEND_U1, DejaDupBackendU1Class))
#define DEJA_DUP_IS_BACKEND_U1(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_BACKEND_U1))
#define DEJA_DUP_IS_BACKEND_U1_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_BACKEND_U1))
#define DEJA_DUP_BACKEND_U1_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_BACKEND_U1, DejaDupBackendU1Class))

typedef struct _DejaDupBackendU1 DejaDupBackendU1;
typedef struct _DejaDupBackendU1Class DejaDupBackendU1Class;
typedef struct _DejaDupBackendU1Private DejaDupBackendU1Private;
typedef struct _DejaDupCheckerPrivate DejaDupCheckerPrivate;

#define DEJA_DUP_TYPE_TIMESTAMP_TYPE (deja_dup_timestamp_type_get_type ())

#define DEJA_DUP_TYPE_SIMPLE_SETTINGS (deja_dup_simple_settings_get_type ())
#define DEJA_DUP_SIMPLE_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_SIMPLE_SETTINGS, DejaDupSimpleSettings))
#define DEJA_DUP_SIMPLE_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_SIMPLE_SETTINGS, DejaDupSimpleSettingsClass))
#define DEJA_DUP_IS_SIMPLE_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_SIMPLE_SETTINGS))
#define DEJA_DUP_IS_SIMPLE_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_SIMPLE_SETTINGS))
#define DEJA_DUP_SIMPLE_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_SIMPLE_SETTINGS, DejaDupSimpleSettingsClass))

typedef struct _DejaDupSimpleSettings DejaDupSimpleSettings;
typedef struct _DejaDupSimpleSettingsClass DejaDupSimpleSettingsClass;

#define DEJA_DUP_TYPE_TOOL_JOB (deja_dup_tool_job_get_type ())
#define DEJA_DUP_TOOL_JOB(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_TOOL_JOB, DejaDupToolJob))
#define DEJA_DUP_TOOL_JOB_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_TOOL_JOB, DejaDupToolJobClass))
#define DEJA_DUP_IS_TOOL_JOB(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_TOOL_JOB))
#define DEJA_DUP_IS_TOOL_JOB_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_TOOL_JOB))
#define DEJA_DUP_TOOL_JOB_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_TOOL_JOB, DejaDupToolJobClass))

typedef struct _DejaDupToolJob DejaDupToolJob;
typedef struct _DejaDupToolJobClass DejaDupToolJobClass;

#define DEJA_DUP_TYPE_NETWORK (deja_dup_network_get_type ())
#define DEJA_DUP_NETWORK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_NETWORK, DejaDupNetwork))
#define DEJA_DUP_NETWORK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_NETWORK, DejaDupNetworkClass))
#define DEJA_DUP_IS_NETWORK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_NETWORK))
#define DEJA_DUP_IS_NETWORK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_NETWORK))
#define DEJA_DUP_NETWORK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_NETWORK, DejaDupNetworkClass))

typedef struct _DejaDupNetwork DejaDupNetwork;
typedef struct _DejaDupNetworkClass DejaDupNetworkClass;
typedef struct _DejaDupNetworkPrivate DejaDupNetworkPrivate;

#define DEJA_DUP_TYPE_OPERATION (deja_dup_operation_get_type ())
#define DEJA_DUP_OPERATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_OPERATION, DejaDupOperation))
#define DEJA_DUP_OPERATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_OPERATION, DejaDupOperationClass))
#define DEJA_DUP_IS_OPERATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_OPERATION))
#define DEJA_DUP_IS_OPERATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_OPERATION))
#define DEJA_DUP_OPERATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_OPERATION, DejaDupOperationClass))

typedef struct _DejaDupOperation DejaDupOperation;
typedef struct _DejaDupOperationClass DejaDupOperationClass;
typedef struct _DejaDupOperationPrivate DejaDupOperationPrivate;

#define DEJA_DUP_OPERATION_TYPE_STATE (deja_dup_operation_state_get_type ())
#define DEJA_DUP_OPERATION_STATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_OPERATION_TYPE_STATE, DejaDupOperationState))
#define DEJA_DUP_OPERATION_STATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_OPERATION_TYPE_STATE, DejaDupOperationStateClass))
#define DEJA_DUP_OPERATION_IS_STATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_OPERATION_TYPE_STATE))
#define DEJA_DUP_OPERATION_IS_STATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_OPERATION_TYPE_STATE))
#define DEJA_DUP_OPERATION_STATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_OPERATION_TYPE_STATE, DejaDupOperationStateClass))

typedef struct _DejaDupOperationState DejaDupOperationState;
typedef struct _DejaDupOperationStateClass DejaDupOperationStateClass;
typedef struct _DejaDupOperationStatePrivate DejaDupOperationStatePrivate;

#define DEJA_DUP_TYPE_OPERATION_BACKUP (deja_dup_operation_backup_get_type ())
#define DEJA_DUP_OPERATION_BACKUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_OPERATION_BACKUP, DejaDupOperationBackup))
#define DEJA_DUP_OPERATION_BACKUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_OPERATION_BACKUP, DejaDupOperationBackupClass))
#define DEJA_DUP_IS_OPERATION_BACKUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_OPERATION_BACKUP))
#define DEJA_DUP_IS_OPERATION_BACKUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_OPERATION_BACKUP))
#define DEJA_DUP_OPERATION_BACKUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_OPERATION_BACKUP, DejaDupOperationBackupClass))

typedef struct _DejaDupOperationBackup DejaDupOperationBackup;
typedef struct _DejaDupOperationBackupClass DejaDupOperationBackupClass;
typedef struct _DejaDupOperationBackupPrivate DejaDupOperationBackupPrivate;

#define DEJA_DUP_TYPE_OPERATION_FILES (deja_dup_operation_files_get_type ())
#define DEJA_DUP_OPERATION_FILES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_OPERATION_FILES, DejaDupOperationFiles))
#define DEJA_DUP_OPERATION_FILES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_OPERATION_FILES, DejaDupOperationFilesClass))
#define DEJA_DUP_IS_OPERATION_FILES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_OPERATION_FILES))
#define DEJA_DUP_IS_OPERATION_FILES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_OPERATION_FILES))
#define DEJA_DUP_OPERATION_FILES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_OPERATION_FILES, DejaDupOperationFilesClass))

typedef struct _DejaDupOperationFiles DejaDupOperationFiles;
typedef struct _DejaDupOperationFilesClass DejaDupOperationFilesClass;
typedef struct _DejaDupOperationFilesPrivate DejaDupOperationFilesPrivate;

#define DEJA_DUP_TYPE_OPERATION_RESTORE (deja_dup_operation_restore_get_type ())
#define DEJA_DUP_OPERATION_RESTORE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_OPERATION_RESTORE, DejaDupOperationRestore))
#define DEJA_DUP_OPERATION_RESTORE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_OPERATION_RESTORE, DejaDupOperationRestoreClass))
#define DEJA_DUP_IS_OPERATION_RESTORE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_OPERATION_RESTORE))
#define DEJA_DUP_IS_OPERATION_RESTORE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_OPERATION_RESTORE))
#define DEJA_DUP_OPERATION_RESTORE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_OPERATION_RESTORE, DejaDupOperationRestoreClass))

typedef struct _DejaDupOperationRestore DejaDupOperationRestore;
typedef struct _DejaDupOperationRestoreClass DejaDupOperationRestoreClass;
typedef struct _DejaDupOperationRestorePrivate DejaDupOperationRestorePrivate;

#define DEJA_DUP_TYPE_OPERATION_STATUS (deja_dup_operation_status_get_type ())
#define DEJA_DUP_OPERATION_STATUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_OPERATION_STATUS, DejaDupOperationStatus))
#define DEJA_DUP_OPERATION_STATUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_OPERATION_STATUS, DejaDupOperationStatusClass))
#define DEJA_DUP_IS_OPERATION_STATUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_OPERATION_STATUS))
#define DEJA_DUP_IS_OPERATION_STATUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_OPERATION_STATUS))
#define DEJA_DUP_OPERATION_STATUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_OPERATION_STATUS, DejaDupOperationStatusClass))

typedef struct _DejaDupOperationStatus DejaDupOperationStatus;
typedef struct _DejaDupOperationStatusClass DejaDupOperationStatusClass;
typedef struct _DejaDupOperationStatusPrivate DejaDupOperationStatusPrivate;

#define DEJA_DUP_TYPE_OPERATION_VERIFY (deja_dup_operation_verify_get_type ())
#define DEJA_DUP_OPERATION_VERIFY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_OPERATION_VERIFY, DejaDupOperationVerify))
#define DEJA_DUP_OPERATION_VERIFY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_OPERATION_VERIFY, DejaDupOperationVerifyClass))
#define DEJA_DUP_IS_OPERATION_VERIFY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_OPERATION_VERIFY))
#define DEJA_DUP_IS_OPERATION_VERIFY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_OPERATION_VERIFY))
#define DEJA_DUP_OPERATION_VERIFY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_OPERATION_VERIFY, DejaDupOperationVerifyClass))

typedef struct _DejaDupOperationVerify DejaDupOperationVerify;
typedef struct _DejaDupOperationVerifyClass DejaDupOperationVerifyClass;
typedef struct _DejaDupOperationVerifyPrivate DejaDupOperationVerifyPrivate;

#define DEJA_DUP_TYPE_RECURSIVE_OP (deja_dup_recursive_op_get_type ())
#define DEJA_DUP_RECURSIVE_OP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_RECURSIVE_OP, DejaDupRecursiveOp))
#define DEJA_DUP_RECURSIVE_OP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_RECURSIVE_OP, DejaDupRecursiveOpClass))
#define DEJA_DUP_IS_RECURSIVE_OP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_RECURSIVE_OP))
#define DEJA_DUP_IS_RECURSIVE_OP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_RECURSIVE_OP))
#define DEJA_DUP_RECURSIVE_OP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_RECURSIVE_OP, DejaDupRecursiveOpClass))

typedef struct _DejaDupRecursiveOp DejaDupRecursiveOp;
typedef struct _DejaDupRecursiveOpClass DejaDupRecursiveOpClass;
typedef struct _DejaDupRecursiveOpPrivate DejaDupRecursiveOpPrivate;

#define DEJA_DUP_TYPE_RECURSIVE_DELETE (deja_dup_recursive_delete_get_type ())
#define DEJA_DUP_RECURSIVE_DELETE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_RECURSIVE_DELETE, DejaDupRecursiveDelete))
#define DEJA_DUP_RECURSIVE_DELETE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_RECURSIVE_DELETE, DejaDupRecursiveDeleteClass))
#define DEJA_DUP_IS_RECURSIVE_DELETE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_RECURSIVE_DELETE))
#define DEJA_DUP_IS_RECURSIVE_DELETE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_RECURSIVE_DELETE))
#define DEJA_DUP_RECURSIVE_DELETE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_RECURSIVE_DELETE, DejaDupRecursiveDeleteClass))

typedef struct _DejaDupRecursiveDelete DejaDupRecursiveDelete;
typedef struct _DejaDupRecursiveDeleteClass DejaDupRecursiveDeleteClass;
typedef struct _DejaDupRecursiveDeletePrivate DejaDupRecursiveDeletePrivate;

#define DEJA_DUP_TYPE_RECURSIVE_MOVE (deja_dup_recursive_move_get_type ())
#define DEJA_DUP_RECURSIVE_MOVE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_RECURSIVE_MOVE, DejaDupRecursiveMove))
#define DEJA_DUP_RECURSIVE_MOVE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_RECURSIVE_MOVE, DejaDupRecursiveMoveClass))
#define DEJA_DUP_IS_RECURSIVE_MOVE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_RECURSIVE_MOVE))
#define DEJA_DUP_IS_RECURSIVE_MOVE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_RECURSIVE_MOVE))
#define DEJA_DUP_RECURSIVE_MOVE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_RECURSIVE_MOVE, DejaDupRecursiveMoveClass))

typedef struct _DejaDupRecursiveMove DejaDupRecursiveMove;
typedef struct _DejaDupRecursiveMoveClass DejaDupRecursiveMoveClass;
typedef struct _DejaDupRecursiveMovePrivate DejaDupRecursiveMovePrivate;
typedef struct _DejaDupSimpleSettingsPrivate DejaDupSimpleSettingsPrivate;
typedef struct _DejaDupToolJobPrivate DejaDupToolJobPrivate;

#define DEJA_DUP_TOOL_JOB_TYPE_FLAGS (deja_dup_tool_job_flags_get_type ())

#define DEJA_DUP_TYPE_TOOL_PLUGIN (deja_dup_tool_plugin_get_type ())
#define DEJA_DUP_TOOL_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DEJA_DUP_TYPE_TOOL_PLUGIN, DejaDupToolPlugin))
#define DEJA_DUP_TOOL_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DEJA_DUP_TYPE_TOOL_PLUGIN, DejaDupToolPluginClass))
#define DEJA_DUP_IS_TOOL_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DEJA_DUP_TYPE_TOOL_PLUGIN))
#define DEJA_DUP_IS_TOOL_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DEJA_DUP_TYPE_TOOL_PLUGIN))
#define DEJA_DUP_TOOL_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DEJA_DUP_TYPE_TOOL_PLUGIN, DejaDupToolPluginClass))

typedef struct _DejaDupToolPlugin DejaDupToolPlugin;
typedef struct _DejaDupToolPluginClass DejaDupToolPluginClass;
typedef struct _DejaDupToolPluginPrivate DejaDupToolPluginPrivate;

typedef enum  {
	DEJA_DUP_TOOL_JOB_MODE_INVALID,
	DEJA_DUP_TOOL_JOB_MODE_BACKUP,
	DEJA_DUP_TOOL_JOB_MODE_RESTORE,
	DEJA_DUP_TOOL_JOB_MODE_STATUS,
	DEJA_DUP_TOOL_JOB_MODE_LIST,
	DEJA_DUP_TOOL_JOB_MODE_HISTORY
} DejaDupToolJobMode;

struct _DejaDupBackend {
	GObject parent_instance;
	DejaDupBackendPrivate * priv;
};

struct _DejaDupBackendClass {
	GObjectClass parent_class;
	gboolean (*is_native) (DejaDupBackend* self);
	GIcon* (*get_icon) (DejaDupBackend* self);
	gchar* (*get_location) (DejaDupBackend* self, gboolean* as_root);
	gchar* (*get_location_pretty) (DejaDupBackend* self);
	void (*is_ready) (DejaDupBackend* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gboolean (*is_ready_finish) (DejaDupBackend* self, GAsyncResult* _res_, gchar** when);
	void (*get_envp) (DejaDupBackend* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*get_envp_finish) (DejaDupBackend* self, GAsyncResult* _res_, GError** error);
	void (*get_space) (DejaDupBackend* self, gboolean free, GAsyncReadyCallback _callback_, gpointer _user_data_);
	guint64 (*get_space_finish) (DejaDupBackend* self, GAsyncResult* _res_);
	gboolean (*space_can_be_infinite) (DejaDupBackend* self);
	void (*add_argv) (DejaDupBackend* self, DejaDupToolJobMode mode, GList** argv);
	DejaDupBackend* (*clone) (DejaDupBackend* self);
};

struct _DejaDupBackendAuto {
	DejaDupBackend parent_instance;
	DejaDupBackendAutoPrivate * priv;
};

struct _DejaDupBackendAutoClass {
	DejaDupBackendClass parent_class;
};

struct _DejaDupBackendFile {
	DejaDupBackend parent_instance;
	DejaDupBackendFilePrivate * priv;
};

struct _DejaDupBackendFileClass {
	DejaDupBackendClass parent_class;
};

struct _DejaDupBackendRackspace {
	DejaDupBackend parent_instance;
	DejaDupBackendRackspacePrivate * priv;
};

struct _DejaDupBackendRackspaceClass {
	DejaDupBackendClass parent_class;
};

struct _DejaDupBackendS3 {
	DejaDupBackend parent_instance;
	DejaDupBackendS3Private * priv;
};

struct _DejaDupBackendS3Class {
	DejaDupBackendClass parent_class;
};

struct _DejaDupBackendU1 {
	DejaDupBackend parent_instance;
	DejaDupBackendU1Private * priv;
};

struct _DejaDupBackendU1Class {
	DejaDupBackendClass parent_class;
};

struct _DejaDupChecker {
	GObject parent_instance;
	DejaDupCheckerPrivate * priv;
};

struct _DejaDupCheckerClass {
	GObjectClass parent_class;
};

typedef enum  {
	DEJA_DUP_BACKUP_ERROR_BAD_CONFIG,
	DEJA_DUP_BACKUP_ERROR_ALREADY_RUNNING
} DejaDupBackupError;
#define DEJA_DUP_BACKUP_ERROR deja_dup_backup_error_quark ()
typedef enum  {
	DEJA_DUP_TIMESTAMP_TYPE_NONE,
	DEJA_DUP_TIMESTAMP_TYPE_BACKUP,
	DEJA_DUP_TIMESTAMP_TYPE_RESTORE
} DejaDupTimestampType;

struct _DejaDupNetwork {
	GObject parent_instance;
	DejaDupNetworkPrivate * priv;
};

struct _DejaDupNetworkClass {
	GObjectClass parent_class;
};

struct _DejaDupOperation {
	GObject parent_instance;
	DejaDupOperationPrivate * priv;
	DejaDupToolJob* job;
	gchar* passphrase;
};

struct _DejaDupOperationClass {
	GObjectClass parent_class;
	void (*start) (DejaDupOperation* self, gboolean try_claim_bus, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*start_finish) (DejaDupOperation* self, GAsyncResult* _res_);
	void (*connect_to_job) (DejaDupOperation* self);
	void (*send_action_file_changed) (DejaDupOperation* self, GFile* file, gboolean actual);
	void (*operation_finished) (DejaDupOperation* self, DejaDupToolJob* job, gboolean success, gboolean cancelled, const gchar* detail, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*operation_finished_finish) (DejaDupOperation* self, GAsyncResult* _res_);
	GList* (*make_argv) (DejaDupOperation* self);
};

struct _DejaDupOperationState {
	GTypeInstance parent_instance;
	volatile int ref_count;
	DejaDupOperationStatePrivate * priv;
	DejaDupBackend* backend;
	gchar* passphrase;
};

struct _DejaDupOperationStateClass {
	GTypeClass parent_class;
	void (*finalize) (DejaDupOperationState *self);
};

struct _DejaDupOperationBackup {
	DejaDupOperation parent_instance;
	DejaDupOperationBackupPrivate * priv;
};

struct _DejaDupOperationBackupClass {
	DejaDupOperationClass parent_class;
};

struct _DejaDupOperationFiles {
	DejaDupOperation parent_instance;
	DejaDupOperationFilesPrivate * priv;
};

struct _DejaDupOperationFilesClass {
	DejaDupOperationClass parent_class;
};

struct _DejaDupOperationRestore {
	DejaDupOperation parent_instance;
	DejaDupOperationRestorePrivate * priv;
};

struct _DejaDupOperationRestoreClass {
	DejaDupOperationClass parent_class;
};

struct _DejaDupOperationStatus {
	DejaDupOperation parent_instance;
	DejaDupOperationStatusPrivate * priv;
};

struct _DejaDupOperationStatusClass {
	DejaDupOperationClass parent_class;
};

struct _DejaDupOperationVerify {
	DejaDupOperation parent_instance;
	DejaDupOperationVerifyPrivate * priv;
};

struct _DejaDupOperationVerifyClass {
	DejaDupOperationClass parent_class;
};

struct _DejaDupRecursiveOp {
	GObject parent_instance;
	DejaDupRecursiveOpPrivate * priv;
	GFileType src_type;
	GFileType dst_type;
};

struct _DejaDupRecursiveOpClass {
	GObjectClass parent_class;
	void (*handle_file) (DejaDupRecursiveOp* self);
	void (*handle_dir) (DejaDupRecursiveOp* self);
	void (*finish_dir) (DejaDupRecursiveOp* self);
	DejaDupRecursiveOp* (*clone_for_info) (DejaDupRecursiveOp* self, GFileInfo* info);
};

struct _DejaDupRecursiveDelete {
	DejaDupRecursiveOp parent_instance;
	DejaDupRecursiveDeletePrivate * priv;
};

struct _DejaDupRecursiveDeleteClass {
	DejaDupRecursiveOpClass parent_class;
};

struct _DejaDupRecursiveMove {
	DejaDupRecursiveOp parent_instance;
	DejaDupRecursiveMovePrivate * priv;
};

struct _DejaDupRecursiveMoveClass {
	DejaDupRecursiveOpClass parent_class;
};

struct _DejaDupSimpleSettings {
	GSettings parent_instance;
	DejaDupSimpleSettingsPrivate * priv;
};

struct _DejaDupSimpleSettingsClass {
	GSettingsClass parent_class;
};

struct _DejaDupToolJob {
	GObject parent_instance;
	DejaDupToolJobPrivate * priv;
	GList* includes;
	GList* excludes;
	GList* _restore_files;
};

struct _DejaDupToolJobClass {
	GObjectClass parent_class;
	void (*start) (DejaDupToolJob* self);
	void (*cancel) (DejaDupToolJob* self);
	void (*stop) (DejaDupToolJob* self);
	void (*pause) (DejaDupToolJob* self, const gchar* reason);
	void (*resume) (DejaDupToolJob* self);
};

typedef enum  {
	DEJA_DUP_TOOL_JOB_FLAGS_NO_PROGRESS,
	DEJA_DUP_TOOL_JOB_FLAGS_NO_CACHE
} DejaDupToolJobFlags;

struct _DejaDupToolPlugin {
	PeasExtensionBase parent_instance;
	DejaDupToolPluginPrivate * priv;
};

struct _DejaDupToolPluginClass {
	PeasExtensionBaseClass parent_class;
	void (*activate) (DejaDupToolPlugin* self);
	void (*deactivate) (DejaDupToolPlugin* self);
	void (*update_state) (DejaDupToolPlugin* self);
	DejaDupToolJob* (*create_job) (DejaDupToolPlugin* self, GError** error);
};


GType deja_dup_backend_get_type (void) G_GNUC_CONST;
GType deja_dup_tool_job_mode_get_type (void) G_GNUC_CONST;
extern guint64 deja_dup_backend_INFINITE_SPACE;
gboolean deja_dup_backend_is_native (DejaDupBackend* self);
GIcon* deja_dup_backend_get_icon (DejaDupBackend* self);
gchar* deja_dup_backend_get_location (DejaDupBackend* self, gboolean* as_root);
gchar* deja_dup_backend_get_location_pretty (DejaDupBackend* self);
void deja_dup_backend_is_ready (DejaDupBackend* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
gboolean deja_dup_backend_is_ready_finish (DejaDupBackend* self, GAsyncResult* _res_, gchar** when);
void deja_dup_backend_get_envp (DejaDupBackend* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_backend_get_envp_finish (DejaDupBackend* self, GAsyncResult* _res_, GError** error);
void deja_dup_backend_get_space (DejaDupBackend* self, gboolean free, GAsyncReadyCallback _callback_, gpointer _user_data_);
guint64 deja_dup_backend_get_space_finish (DejaDupBackend* self, GAsyncResult* _res_);
gboolean deja_dup_backend_space_can_be_infinite (DejaDupBackend* self);
void deja_dup_backend_add_argv (DejaDupBackend* self, DejaDupToolJobMode mode, GList** argv);
DejaDupBackend* deja_dup_backend_clone (DejaDupBackend* self);
gchar* deja_dup_backend_get_default_type (void);
DejaDupBackend* deja_dup_backend_get_default (void);
DejaDupBackend* deja_dup_backend_construct (GType object_type);
GMountOperation* deja_dup_backend_get_mount_op (DejaDupBackend* self);
void deja_dup_backend_set_mount_op (DejaDupBackend* self, GMountOperation* value);
GType deja_dup_backend_auto_get_type (void) G_GNUC_CONST;
DejaDupBackendAuto* deja_dup_backend_auto_new (void);
DejaDupBackendAuto* deja_dup_backend_auto_construct (GType object_type);
#define DEJA_DUP_FILE_ROOT "File"
#define DEJA_DUP_FILE_TYPE_KEY "type"
#define DEJA_DUP_FILE_PATH_KEY "path"
#define DEJA_DUP_FILE_RELPATH_KEY "relpath"
#define DEJA_DUP_FILE_UUID_KEY "uuid"
#define DEJA_DUP_FILE_NAME_KEY "name"
#define DEJA_DUP_FILE_SHORT_NAME_KEY "short-name"
#define DEJA_DUP_FILE_ICON_KEY "icon"
GType deja_dup_backend_file_get_type (void) G_GNUC_CONST;
void deja_dup_backend_file_check_for_volume_info (GFile* file, GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_backend_file_check_for_volume_info_finish (GAsyncResult* _res_, GError** error);
void deja_dup_backend_file_set_volume_info (GVolume* volume, const gchar* relpath, GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_backend_file_set_volume_info_finish (GAsyncResult* _res_);
GVolume* deja_dup_backend_file_find_volume_by_uuid (const gchar* uuid);
DejaDupBackendFile* deja_dup_backend_file_new (void);
DejaDupBackendFile* deja_dup_backend_file_construct (GType object_type);
#define DEJA_DUP_RACKSPACE_ROOT "Rackspace"
#define DEJA_DUP_RACKSPACE_USERNAME_KEY "username"
#define DEJA_DUP_RACKSPACE_CONTAINER_KEY "container"
GType deja_dup_backend_rackspace_get_type (void) G_GNUC_CONST;
GType deja_dup_checker_get_type (void) G_GNUC_CONST;
DejaDupChecker* deja_dup_backend_rackspace_get_checker (void);
DejaDupBackendRackspace* deja_dup_backend_rackspace_new (void);
DejaDupBackendRackspace* deja_dup_backend_rackspace_construct (GType object_type);
#define DEJA_DUP_S3_ROOT "S3"
#define DEJA_DUP_S3_ID_KEY "id"
#define DEJA_DUP_S3_BUCKET_KEY "bucket"
#define DEJA_DUP_S3_FOLDER_KEY "folder"
GType deja_dup_backend_s3_get_type (void) G_GNUC_CONST;
DejaDupChecker* deja_dup_backend_s3_get_checker (void);
gboolean deja_dup_backend_s3_bump_bucket (DejaDupBackendS3* self);
DejaDupBackendS3* deja_dup_backend_s3_new (void);
DejaDupBackendS3* deja_dup_backend_s3_construct (GType object_type);
#define DEJA_DUP_U1_ROOT "U1"
#define DEJA_DUP_U1_FOLDER_KEY "folder"
GType deja_dup_backend_u1_get_type (void) G_GNUC_CONST;
DejaDupChecker* deja_dup_backend_u1_get_checker (void);
GDBusProxy* deja_dup_backend_u1_get_creds_proxy (GError** error);
GDBusProxy* deja_dup_backend_u1_get_prefs_proxy (GError** error);
DejaDupBackendU1* deja_dup_backend_u1_new (void);
DejaDupBackendU1* deja_dup_backend_u1_construct (GType object_type);
DejaDupChecker* deja_dup_checker_new (void);
DejaDupChecker* deja_dup_checker_construct (GType object_type);
gboolean deja_dup_checker_get_available (DejaDupChecker* self);
void deja_dup_checker_set_available (DejaDupChecker* self, gboolean value);
gboolean deja_dup_checker_get_complete (DejaDupChecker* self);
void deja_dup_checker_set_complete (DejaDupChecker* self, gboolean value);
#define DEJA_DUP_INCLUDE_LIST_KEY "include-list"
#define DEJA_DUP_EXCLUDE_LIST_KEY "exclude-list"
#define DEJA_DUP_APPS_LIST_KEY "apps-list"
#define DEJA_DUP_APPS_ROOT "Apps"
#define DEJA_DUP_BACKUP_KEY "backup"
#define DEJA_DUP_BACKEND_KEY "backend"
#define DEJA_DUP_ROOT_PROMPT_KEY "root-prompt"
#define DEJA_DUP_WELCOMED_KEY "welcomed"
#define DEJA_DUP_LAST_RUN_KEY "last-run"
#define DEJA_DUP_LAST_BACKUP_KEY "last-backup"
#define DEJA_DUP_LAST_RESTORE_KEY "last-restore"
#define DEJA_DUP_PROMPT_CHECK_KEY "prompt-check"
#define DEJA_DUP_NAG_CHECK_KEY "nag-check"
#define DEJA_DUP_PERIODIC_KEY "periodic"
#define DEJA_DUP_PERIODIC_PERIOD_KEY "periodic-period"
#define DEJA_DUP_DELETE_AFTER_KEY "delete-after"
#define DEJA_DUP_FULL_BACKUP_PERIOD_KEY "full-backup-period"
GQuark deja_dup_backup_error_quark (void);
GType deja_dup_timestamp_type_get_type (void) G_GNUC_CONST;
gboolean deja_dup_in_testing_mode (void);
void deja_dup_update_last_run_timestamp (DejaDupTimestampType type);
void deja_dup_run_deja_dup (const gchar* args, GAppLaunchContext* ctx, GList* files);
gchar* deja_dup_last_run_date (DejaDupTimestampType type);
GTimeSpan deja_dup_get_day (void);
GDateTime* deja_dup_next_run_date (void);
gint deja_dup_get_prompt_delay (void);
gboolean deja_dup_has_seen_settings (void);
void deja_dup_make_prompt_check (void);
void deja_dup_update_prompt_time (gboolean cancel);
void deja_dup_update_nag_time (gboolean cancel);
gint deja_dup_get_nag_delay (void);
gboolean deja_dup_is_nag_time (void);
GType deja_dup_simple_settings_get_type (void) G_GNUC_CONST;
gchar* deja_dup_get_folder_key (DejaDupSimpleSettings* settings, const gchar* key);
void deja_dup_set_settings_read_only (gboolean ro);
DejaDupSimpleSettings* deja_dup_get_settings (const gchar* subdir);
DejaDupSimpleSettings* deja_dup_get_app_settings (const gchar* ske, const gchar* subdir);
GType deja_dup_tool_job_get_type (void) G_GNUC_CONST;
DejaDupToolJob* deja_dup_make_tool_job (GError** error);
gboolean deja_dup_initialize (gchar** header, gchar** msg);
void deja_dup_i18n_setup (void);
gchar* deja_dup_get_file_desc (GFile* file);
gchar* deja_dup_get_display_name (GFile* f);
void deja_dup_get_nickname (GFile* f, GAsyncReadyCallback _callback_, gpointer _user_data_);
gchar* deja_dup_get_nickname_finish (GAsyncResult* _res_);
gint deja_dup_get_full_backup_threshold (void);
void deja_dup_get_full_backup_threshold_date (GDate* result);
gchar* deja_dup_get_trash_path (void);
GFile* deja_dup_parse_dir (const gchar* dir);
GFile** deja_dup_parse_dir_list (const gchar** dirs, int dirs_length1, int* result_length1);
GType deja_dup_network_get_type (void) G_GNUC_CONST;
DejaDupNetwork* deja_dup_network_get (void);
void deja_dup_network_ensure_status (GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_network_ensure_status_finish (GAsyncResult* _res_);
void deja_dup_network_can_reach (DejaDupNetwork* self, const gchar* url, GAsyncReadyCallback _callback_, gpointer _user_data_);
gboolean deja_dup_network_can_reach_finish (DejaDupNetwork* self, GAsyncResult* _res_);
DejaDupNetwork* deja_dup_network_new (void);
DejaDupNetwork* deja_dup_network_construct (GType object_type);
gboolean deja_dup_network_get_connected (DejaDupNetwork* self);
void deja_dup_network_set_connected (DejaDupNetwork* self, gboolean value);
GType deja_dup_operation_get_type (void) G_GNUC_CONST;
gchar* deja_dup_operation_mode_to_string (DejaDupToolJobMode mode);
gpointer deja_dup_operation_state_ref (gpointer instance);
void deja_dup_operation_state_unref (gpointer instance);
GParamSpec* deja_dup_operation_param_spec_state (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void deja_dup_operation_value_set_state (GValue* value, gpointer v_object);
void deja_dup_operation_value_take_state (GValue* value, gpointer v_object);
gpointer deja_dup_operation_value_get_state (const GValue* value);
GType deja_dup_operation_state_get_type (void) G_GNUC_CONST;
DejaDupOperationState* deja_dup_operation_get_state (DejaDupOperation* self);
void deja_dup_operation_set_state (DejaDupOperation* self, DejaDupOperationState* state);
void deja_dup_operation_start (DejaDupOperation* self, gboolean try_claim_bus, GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_operation_start_finish (DejaDupOperation* self, GAsyncResult* _res_);
void deja_dup_operation_cancel (DejaDupOperation* self);
void deja_dup_operation_stop (DejaDupOperation* self);
void deja_dup_operation_connect_to_job (DejaDupOperation* self);
void deja_dup_operation_send_action_file_changed (DejaDupOperation* self, GFile* file, gboolean actual);
void deja_dup_operation_set_passphrase (DejaDupOperation* self, const gchar* passphrase);
GList* deja_dup_operation_make_argv (DejaDupOperation* self);
void deja_dup_operation_chain_op (DejaDupOperation* self, DejaDupOperation* subop, const gchar* desc, const gchar* detail, GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_operation_chain_op_finish (DejaDupOperation* self, GAsyncResult* _res_);
DejaDupOperation* deja_dup_operation_construct (GType object_type);
gboolean deja_dup_operation_get_use_cached_password (DejaDupOperation* self);
void deja_dup_operation_set_use_cached_password (DejaDupOperation* self, gboolean value);
gboolean deja_dup_operation_get_needs_password (DejaDupOperation* self);
void deja_dup_operation_set_needs_password (DejaDupOperation* self, gboolean value);
DejaDupBackend* deja_dup_operation_get_backend (DejaDupOperation* self);
gboolean deja_dup_operation_get_use_progress (DejaDupOperation* self);
void deja_dup_operation_set_use_progress (DejaDupOperation* self, gboolean value);
DejaDupToolJobMode deja_dup_operation_get_mode (DejaDupOperation* self);
DejaDupOperationState* deja_dup_operation_state_new (void);
DejaDupOperationState* deja_dup_operation_state_construct (GType object_type);
GType deja_dup_operation_backup_get_type (void) G_GNUC_CONST;
DejaDupOperationBackup* deja_dup_operation_backup_new (void);
DejaDupOperationBackup* deja_dup_operation_backup_construct (GType object_type);
void deja_dup_operation_backup_save_gsettings (DejaDupOperationBackup* self, const gchar* schema);
GType deja_dup_operation_files_get_type (void) G_GNUC_CONST;
DejaDupOperationFiles* deja_dup_operation_files_new (struct tm* time_in, GFile* source);
DejaDupOperationFiles* deja_dup_operation_files_construct (GType object_type, struct tm* time_in, GFile* source);
void deja_dup_operation_files_get_time (DejaDupOperationFiles* self, struct tm* result);
void deja_dup_operation_files_set_time (DejaDupOperationFiles* self, struct tm* value);
GFile* deja_dup_operation_files_get_source (DejaDupOperationFiles* self);
GType deja_dup_operation_restore_get_type (void) G_GNUC_CONST;
DejaDupOperationRestore* deja_dup_operation_restore_new (const gchar* dest_in, const gchar* time_in, GList* files_in);
DejaDupOperationRestore* deja_dup_operation_restore_construct (GType object_type, const gchar* dest_in, const gchar* time_in, GList* files_in);
void deja_dup_operation_restore_restore_gsettings (DejaDupOperationRestore* self);
const gchar* deja_dup_operation_restore_get_dest (DejaDupOperationRestore* self);
const gchar* deja_dup_operation_restore_get_time (DejaDupOperationRestore* self);
GList* deja_dup_operation_restore_get_restore_files (DejaDupOperationRestore* self);
GType deja_dup_operation_status_get_type (void) G_GNUC_CONST;
DejaDupOperationStatus* deja_dup_operation_status_new (void);
DejaDupOperationStatus* deja_dup_operation_status_construct (GType object_type);
GType deja_dup_operation_verify_get_type (void) G_GNUC_CONST;
DejaDupOperationVerify* deja_dup_operation_verify_new (void);
DejaDupOperationVerify* deja_dup_operation_verify_construct (GType object_type);
GType deja_dup_recursive_op_get_type (void) G_GNUC_CONST;
GType deja_dup_recursive_delete_get_type (void) G_GNUC_CONST;
DejaDupRecursiveDelete* deja_dup_recursive_delete_new (GFile* source);
DejaDupRecursiveDelete* deja_dup_recursive_delete_construct (GType object_type, GFile* source);
GType deja_dup_recursive_move_get_type (void) G_GNUC_CONST;
DejaDupRecursiveMove* deja_dup_recursive_move_new (GFile* source, GFile* dest);
DejaDupRecursiveMove* deja_dup_recursive_move_construct (GType object_type, GFile* source, GFile* dest);
void deja_dup_recursive_op_handle_file (DejaDupRecursiveOp* self);
void deja_dup_recursive_op_handle_dir (DejaDupRecursiveOp* self);
void deja_dup_recursive_op_finish_dir (DejaDupRecursiveOp* self);
DejaDupRecursiveOp* deja_dup_recursive_op_clone_for_info (DejaDupRecursiveOp* self, GFileInfo* info);
void deja_dup_recursive_op_start (DejaDupRecursiveOp* self);
void deja_dup_recursive_op_start_async (DejaDupRecursiveOp* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void deja_dup_recursive_op_start_finish (DejaDupRecursiveOp* self, GAsyncResult* _res_);
DejaDupRecursiveOp* deja_dup_recursive_op_construct (GType object_type);
GFile* deja_dup_recursive_op_get_src (DejaDupRecursiveOp* self);
GFile* deja_dup_recursive_op_get_dst (DejaDupRecursiveOp* self);
DejaDupSimpleSettings* deja_dup_simple_settings_new (const gchar* schema, gboolean ro);
DejaDupSimpleSettings* deja_dup_simple_settings_construct (GType object_type, const gchar* schema, gboolean ro);
void deja_dup_simple_settings_apply (DejaDupSimpleSettings* self);
void deja_dup_simple_settings_set_string (DejaDupSimpleSettings* self, const gchar* k, const gchar* v);
void deja_dup_simple_settings_set_boolean (DejaDupSimpleSettings* self, const gchar* k, gboolean v);
void deja_dup_simple_settings_set_int (DejaDupSimpleSettings* self, const gchar* k, gint v);
void deja_dup_simple_settings_set_value (DejaDupSimpleSettings* self, const gchar* k, GVariant* v);
gboolean deja_dup_simple_settings_get_read_only (DejaDupSimpleSettings* self);
void deja_dup_simple_settings_set_read_only (DejaDupSimpleSettings* self, gboolean value);
GType deja_dup_tool_job_flags_get_type (void) G_GNUC_CONST;
void deja_dup_tool_job_start (DejaDupToolJob* self);
void deja_dup_tool_job_cancel (DejaDupToolJob* self);
void deja_dup_tool_job_stop (DejaDupToolJob* self);
void deja_dup_tool_job_pause (DejaDupToolJob* self, const gchar* reason);
void deja_dup_tool_job_resume (DejaDupToolJob* self);
DejaDupToolJob* deja_dup_tool_job_construct (GType object_type);
DejaDupToolJobMode deja_dup_tool_job_get_mode (DejaDupToolJob* self);
void deja_dup_tool_job_set_mode (DejaDupToolJob* self, DejaDupToolJobMode value);
DejaDupToolJobFlags deja_dup_tool_job_get_flags (DejaDupToolJob* self);
void deja_dup_tool_job_set_flags (DejaDupToolJob* self, DejaDupToolJobFlags value);
GFile* deja_dup_tool_job_get_local (DejaDupToolJob* self);
void deja_dup_tool_job_set_local (DejaDupToolJob* self, GFile* value);
DejaDupBackend* deja_dup_tool_job_get_backend (DejaDupToolJob* self);
void deja_dup_tool_job_set_backend (DejaDupToolJob* self, DejaDupBackend* value);
const gchar* deja_dup_tool_job_get_encrypt_password (DejaDupToolJob* self);
void deja_dup_tool_job_set_encrypt_password (DejaDupToolJob* self, const gchar* value);
GList* deja_dup_tool_job_get_restore_files (DejaDupToolJob* self);
void deja_dup_tool_job_set_restore_files (DejaDupToolJob* self, GList* value);
const gchar* deja_dup_tool_job_get_time (DejaDupToolJob* self);
void deja_dup_tool_job_set_time (DejaDupToolJob* self, const gchar* value);
GType deja_dup_tool_plugin_get_type (void) G_GNUC_CONST;
void deja_dup_tool_plugin_activate (DejaDupToolPlugin* self);
void deja_dup_tool_plugin_deactivate (DejaDupToolPlugin* self);
void deja_dup_tool_plugin_update_state (DejaDupToolPlugin* self);
DejaDupToolJob* deja_dup_tool_plugin_create_job (DejaDupToolPlugin* self, GError** error);
DejaDupToolPlugin* deja_dup_tool_plugin_construct (GType object_type);
const gchar* deja_dup_tool_plugin_get_name (DejaDupToolPlugin* self);
void deja_dup_tool_plugin_set_name (DejaDupToolPlugin* self, const gchar* value);


G_END_DECLS

#endif
